name: Bootstrap

on:
  workflow_dispatch:
    inputs:
      manual_path:
        description: 'Provided paths (comma-separated if multiple) without "/" at beggining.'
        required: false
  pull_request:
    branches:
      - "**"
    paths:
      - '*/*/*/bootstrap/**'

  push:
    branches:
      - "**"
    paths:
      - '*/*/*/bootstrap/**'

concurrency:
  group: ${{ github.workflow }}

jobs:
  matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generate-matrix.outputs.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@6f67ee9ac810f0192ea7b3d2086406f97847bcf9
        with:
          dir_names: true
          files: |
            */*/*/bootstrap/**

      - name: List all changed files
        run: echo '${{ steps.changed-files.outputs.all_changed_files }}'

      - name: Generate Matrix
        id: generate-matrix
        run: |
          CHANGED_FILES="${{ steps.changed-files.outputs.all_changed_files }}"
          MANUAL_PATHS="${{ github.event.inputs.manual_path }}"

          if [[ -n "$MANUAL_PATHS" ]]; then
            echo "Manual paths provided: $MANUAL_PATHS"
            CHANGED_FILES="${MANUAL_PATHS//,/ }"
          fi

          MATRIX_OUTPUT=$(CHANGED_FILES="$CHANGED_FILES" ./.github/scripts/generate_matrix.sh)
          echo $MATRIX_OUTPUT
          echo "matrix=$MATRIX_OUTPUT" >> "$GITHUB_OUTPUT"

  terraform:
    if: ${{ needs.matrix.outputs.matrix != '{"include":[]}' && needs.matrix.outputs.matrix != '' }}
    name: ${{ matrix.workspace }}/${{ matrix.region }}/${{ matrix.cluster }}
    runs-on: ubuntu-latest
    needs: matrix
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix: ${{ fromJson(needs.matrix.outputs.matrix) }}
    environment: ${{ matrix.workspace }}-${{ matrix.region }}-${{ matrix.cluster }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: ECHO
        run: echo "${{ matrix.workspace }}/${{ matrix.region }}/${{ matrix.cluster }}"

      - name: Set envs
        id: tf_envs
        run: echo "tf_envs=$(../../../find-envs.sh)" >> "$GITHUB_OUTPUT"
        working-directory: ${{ matrix.workspace }}/${{ matrix.region }}/${{ matrix.cluster }}/bootstrap

      - name: echo
        run: echo ${{ steps.tf_envs.outputs.tf_envs }}
