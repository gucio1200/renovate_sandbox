name: Bootstrap

on:
  workflow_dispatch:
    inputs:
      manual_path:
        description: 'Provided paths (comma-separated if multiple) without "/" at beggining.'
        required: false
  pull_request:
    branches:
      - "**"
  push:
    branches:
      - "**"

concurrency:
  group: ${{ github.workflow }}

jobs:
  matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generate-matrix.outputs.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@6f67ee9ac810f0192ea7b3d2086406f97847bcf9
        with:
          dir_names: true
          files: |
            */*/*/bootstrap/**

      - name: List all changed files
        run: echo '${{ steps.changed-files.outputs.all_changed_files }}'

      - name: Generate Matrix
        id: generate-matrix
        run: |
          CHANGED_FILES="${{ steps.changed-files.outputs.all_changed_files }}"
          MANUAL_PATHS="${{ github.event.inputs.manual_path }}"

          if [[ -n "$MANUAL_PATHS" ]]; then
            echo "Manual paths provided: $MANUAL_PATHS"
            CHANGED_FILES="${CHANGED_FILES}"$'\n'"${MANUAL_PATHS//,/\\n}"
          fi

          MATRIX_OUTPUT=$(CHANGED_FILES="$CHANGED_FILES" ./.github/scripts/generate_matrix.sh)
          echo $MATRIX_OUTPUT
          echo "matrix=$MATRIX_OUTPUT" >> "$GITHUB_OUTPUT"

  terraform:
    if: ${{ needs.matrix.outputs.matrix != '{"include":[]}' && needs.matrix.outputs.matrix != '' }}
    name: ${{ matrix.workspace }}/${{ matrix.region }}/${{ matrix.cluster }}
    runs-on: ubuntu-latest
    needs: matrix
    strategy:
      fail-fast: true
      max-parallel: 1
      matrix: ${{ fromJson(needs.matrix.outputs.matrix) }}
    environment: ${{ matrix.workspace }}-${{ matrix.region }}-${{ matrix.cluster }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - run: echo ${{ matrix.workspace }}-${{ matrix.region }}-${{ matrix.cluster }}

      - name: Set Secret Name for env
        id: set-secret
        run: |
          ENV_NAME="${{ matrix.workspace }}-${{ matrix.region }}-${{ matrix.cluster }}"
          CLEANED_ENV=$(echo "$ENV_NAME" | tr '-' '_' | tr '[:lower:]' '[:upper:]')
          SECRET_NAME="${CLEANED_ENV}_SECRET"
          echo "secret_name=$SECRET_NAME" >> $GITHUB_OUTPUT

      - name: Check if secret is empty
        env:
          SECRET_VALUE: ${{ secrets[steps.set-secret.outputs.secret_name] }}
          SECRET_NAME: ${{ steps.set-secret.outputs.secret_name }}
        run: |
          if [ -z "$SECRET_VALUE" ]; then
            echo "The secret $SECRET_NAME is empty or not set."
            exit 1
          else
            echo "The secret $SECRET_NAME is set."
          fi
